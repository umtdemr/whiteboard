// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/umtdemr/wb-backend/internal/data (interfaces: TokenModel)

// Package mockdata is a generated GoMock package.
package mockdata

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	data "github.com/umtdemr/wb-backend/internal/data"
)

// MockTokenModel is a mock of TokenModel interface.
type MockTokenModel struct {
	ctrl     *gomock.Controller
	recorder *MockTokenModelMockRecorder
}

// MockTokenModelMockRecorder is the mock recorder for MockTokenModel.
type MockTokenModelMockRecorder struct {
	mock *MockTokenModel
}

// NewMockTokenModel creates a new mock instance.
func NewMockTokenModel(ctrl *gomock.Controller) *MockTokenModel {
	mock := &MockTokenModel{ctrl: ctrl}
	mock.recorder = &MockTokenModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenModel) EXPECT() *MockTokenModelMockRecorder {
	return m.recorder
}

// DeleteAllForUser mocks base method.
func (m *MockTokenModel) DeleteAllForUser(arg0 string, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAllForUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAllForUser indicates an expected call of DeleteAllForUser.
func (mr *MockTokenModelMockRecorder) DeleteAllForUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAllForUser", reflect.TypeOf((*MockTokenModel)(nil).DeleteAllForUser), arg0, arg1)
}

// Insert mocks base method.
func (m *MockTokenModel) Insert(arg0 *data.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockTokenModelMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockTokenModel)(nil).Insert), arg0)
}

// New mocks base method.
func (m *MockTokenModel) New(arg0 int64, arg1 time.Duration, arg2 string) (*data.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0, arg1, arg2)
	ret0, _ := ret[0].(*data.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New.
func (mr *MockTokenModelMockRecorder) New(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockTokenModel)(nil).New), arg0, arg1, arg2)
}
