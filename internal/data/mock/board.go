// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/umtdemr/wb-backend/internal/data (interfaces: BoardModel)

// Package mockdata is a generated GoMock package.
package mockdata

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data "github.com/umtdemr/wb-backend/internal/data"
)

// MockBoardModel is a mock of BoardModel interface.
type MockBoardModel struct {
	ctrl     *gomock.Controller
	recorder *MockBoardModelMockRecorder
}

// MockBoardModelMockRecorder is the mock recorder for MockBoardModel.
type MockBoardModelMockRecorder struct {
	mock *MockBoardModel
}

// NewMockBoardModel creates a new mock instance.
func NewMockBoardModel(ctrl *gomock.Controller) *MockBoardModel {
	mock := &MockBoardModel{ctrl: ctrl}
	mock.recorder = &MockBoardModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBoardModel) EXPECT() *MockBoardModelMockRecorder {
	return m.recorder
}

// CreateBoard mocks base method.
func (m *MockBoardModel) CreateBoard(arg0 *data.Board) (*data.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBoard", arg0)
	ret0, _ := ret[0].(*data.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBoard indicates an expected call of CreateBoard.
func (mr *MockBoardModelMockRecorder) CreateBoard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBoard", reflect.TypeOf((*MockBoardModel)(nil).CreateBoard), arg0)
}

// GetAllBoards mocks base method.
func (m *MockBoardModel) GetAllBoards(arg0 int64) ([]*data.BoardResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllBoards", arg0)
	ret0, _ := ret[0].([]*data.BoardResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllBoards indicates an expected call of GetAllBoards.
func (mr *MockBoardModelMockRecorder) GetAllBoards(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllBoards", reflect.TypeOf((*MockBoardModel)(nil).GetAllBoards), arg0)
}

// GetBoardUsers mocks base method.
func (m *MockBoardModel) GetBoardUsers(arg0 int64) ([]data.BoardUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBoardUsers", arg0)
	ret0, _ := ret[0].([]data.BoardUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBoardUsers indicates an expected call of GetBoardUsers.
func (mr *MockBoardModelMockRecorder) GetBoardUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBoardUsers", reflect.TypeOf((*MockBoardModel)(nil).GetBoardUsers), arg0)
}

// InviteUser mocks base method.
func (m *MockBoardModel) InviteUser(arg0 *data.User, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InviteUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// InviteUser indicates an expected call of InviteUser.
func (mr *MockBoardModelMockRecorder) InviteUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InviteUser", reflect.TypeOf((*MockBoardModel)(nil).InviteUser), arg0, arg1)
}

// RetrieveBoard mocks base method.
func (m *MockBoardModel) RetrieveBoard(arg0 int64, arg1 string) (*data.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveBoard", arg0, arg1)
	ret0, _ := ret[0].(*data.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveBoard indicates an expected call of RetrieveBoard.
func (mr *MockBoardModelMockRecorder) RetrieveBoard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveBoard", reflect.TypeOf((*MockBoardModel)(nil).RetrieveBoard), arg0, arg1)
}
