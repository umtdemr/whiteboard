// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/umtdemr/wb-backend/internal/data (interfaces: PermissionModel)

// Package mockdata is a generated GoMock package.
package mockdata

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data "github.com/umtdemr/wb-backend/internal/data"
)

// MockPermissionModel is a mock of PermissionModel interface.
type MockPermissionModel struct {
	ctrl     *gomock.Controller
	recorder *MockPermissionModelMockRecorder
}

// MockPermissionModelMockRecorder is the mock recorder for MockPermissionModel.
type MockPermissionModelMockRecorder struct {
	mock *MockPermissionModel
}

// NewMockPermissionModel creates a new mock instance.
func NewMockPermissionModel(ctrl *gomock.Controller) *MockPermissionModel {
	mock := &MockPermissionModel{ctrl: ctrl}
	mock.recorder = &MockPermissionModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPermissionModel) EXPECT() *MockPermissionModelMockRecorder {
	return m.recorder
}

// AddForUser mocks base method.
func (m *MockPermissionModel) AddForUser(arg0 int32, arg1 ...string) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddForUser", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddForUser indicates an expected call of AddForUser.
func (mr *MockPermissionModelMockRecorder) AddForUser(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddForUser", reflect.TypeOf((*MockPermissionModel)(nil).AddForUser), varargs...)
}

// GetAllForUser mocks base method.
func (m *MockPermissionModel) GetAllForUser(arg0 int32) (data.Permissions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllForUser", arg0)
	ret0, _ := ret[0].(data.Permissions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllForUser indicates an expected call of GetAllForUser.
func (mr *MockPermissionModelMockRecorder) GetAllForUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllForUser", reflect.TypeOf((*MockPermissionModel)(nil).GetAllForUser), arg0)
}
